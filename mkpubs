from __future__ import print_function
import os, sys
from glob import glob
from bibtexparser import loads

# Print to stderr
def eprint(*args, **kwargs):
    print(*args, file=sys.stderr, **kwargs)

top = [
'<!DOCTYPE html>',
'<html>',
'  <head>',
'    <meta charset="utf-8">',
'    <meta http-equiv="X-UA-Compatible" content="IE=edge">',
'    <title>Publications | Sculpting Visualizations</title>',
'    <meta name="description" content="">',
'    <meta name="viewport" content="width=device-width, initial-scale=1">',
'    <link rel="stylesheet" href="https://necolas.github.io/normalize.css/8.0.1/normalize.css">',
'    <link rel="stylesheet" href="css/style.css">',
'    <script src="js/code.js"></script>',
'  </head>',
'  <body>',
'    {% include "njk/header.html" %}',
'    <div class=publication-page-body>'
]

bottom = [
'    </div>',
'    {% include "njk/footer.html" %}',
'    <script src="" async defer></script>',
'  </body>',
'</html>'
]

def add_pub(year, title, indx):
  tag = "%s-%d" % (year, indx)
  txt =       '        <pub id="%s %s">\n' % (year, title)
  txt = txt + '          <div class=pubimg>\n'
  txt = txt + '            <img  class=pubimg src="publications/%s/%s/image.png" alt="%s"/>\n' % (year, title, title)
  txt = txt + '          </div>\n'
  txt = txt + '          <div class="pubtxt">\n'
  txt = txt + '            <p>\n'

  cfile = 'html/publications/%s/%s/pub.bib' % (year, title)
  if os.path.isfile(cfile):

    citelines = []
    with open(cfile, 'r', encoding='utf-8') as cf:
      for line in cf:
        citelines.append(line)

    txt = txt + '<div class="cite_popup" id="%s">' % tag
    txt = txt + '<button onclick=popdown_bibtex("%s")>X</button>' % tag
    txt = txt + '<div class="cite_popup_body">'
    txt = txt + '<h3>BibTeX Citation</h3>'
    txt = txt + '<textarea rows="10" cols="30" readonly="true">'
    for line in citelines:
      txt = txt + line
    txt = txt + '</textarea>'
    txt = txt + '</div>'
    txt = txt + '</div>'

    citation = loads("".join(citelines)).entries[0]

    if 'title' in citation:
      title = citation['title']

    txt = txt + '<span class=title>\n'
    if 'url' in citation:
      txt = txt + '<a href="%s" target="_blank">%s</a>\n' % (citation['url'], title)
    else:
      txt = txt + '%s\n' % title
    txt = txt + '</span>'

    if 'author' in citation:
      txt = txt + '<br><span class=authors>%s </span>' % citation['author']
    else:
      txt = txt + '<br>(no authors)\n'

    txt = txt + '<span class=source>\n'

    if 'year' in citation:
      txt = txt + '(%s).' % citation['year']
    else:
      txt = txt + '.\n'

    if 'journal' in citation:
      txt = txt + ' %s\n' % citation['journal']
    
    if 'booktitle' in citation:
      txt = txt + ' %s\n' % citation['booktitle']

    if 'volume' in citation and len(citation['volume']) != 0:
      txt = txt + 'vol. %s\n' % (citation['volume'])

    if 'number' in citation and len(citation['number']) != 0:
      txt = txt + 'no. %s\n' % (citation['number'])

    if 'pages' in citation:
      txt = txt + ' (%s)\n' % (citation['pages'])

    txt = txt + '</span>\n'

    txt = txt + '<p onclick=popup_bibtex("%s") style="cursor: pointer;">(cite)</p>' % tag

  else:
    txt = txt + '<span class=pub-title>%s</span>. No citation.\n' % title

  txt = txt + '            </p>\n'
  txt = txt + '          </div>\n'
  txt = txt + '        </pub>\n'
  return txt

def main():
  print("\n".join(top))

  for year in sorted(os.listdir('html/publications'), reverse=True):

    eprint('YEAR %s' % year)

    print('            <year>')
    print('              <div class="pub-year"><label><h2>%s</h2></label></div>' % year)
    print('              <pubs>')

    titles = sorted(os.listdir(f'html/publications/{year}'))
    if len(titles) > 0:
      for indx,title in enumerate(titles):
        eprint(title)
        h = 'html/publications/%s/%s/pub.html' % (year, title)
        f = open(h, 'w', encoding='utf-8')
        f.write(add_pub(year, title, indx))
        f.close()
        print('{% include "' + h + '" %}')

    print('              </pubs>')
    print('            </year>')

  print("\n".join(bottom))

if __name__ == "__main__":
  main()

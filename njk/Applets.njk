<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Thrusts | Sculpting Visualizations</title>
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://necolas.github.io/normalize.css/8.0.1/normalize.css">
    <link rel="stylesheet" href="css/style.css">
    <script src="js/code.js"></script>
  </head>
  <body>

    <navigation-bar>
      {% include "njk/header.html" %}
    </navigation-bar>

    <thrust-page>

      <thrust-sidebar>
        <div>
          <h2>Applets</h2>
          <ul>
            <li><a href="#overview">Applet Overview</a></li>
            <li><a href="#colorloom">ColorLoom</a></li>
            <li><a href="#line">Infinite Line</a></li>
            <li><a href="#glyph">Glyph Aligner</a></li>
            <li><a href="#texture">Texture Mapper</a></li>
          </ul>
        </div>
      </thrust-sidebar>

      <thrust-content>
        <div  id="overview">
          <h2>Applet Overview</h2>
          <p class="big-paragraph">
            Generating dynamic vis assets for use in our ABR program may be a barrier for artists unfamiliar with programming architectures.
            We created a series of Applets—ColorLoom, Infinite Line, Glyph Aligner, and Texture Mapper—to facilitate asset creation and easy import in ABR.
          </p>
        </div>
        <div  id="colorloom">
          <h2>ColorLoom</h2>
          <div class="first-image">
            <img src="images/thrusts/VisSoftwareArch/color.png">
            <h5>By drawing color from nature / natural imagery, using ColorLoom, we can more effectively connect environmental data with the physical phenomena it represents, creating Affective visualizations that are intuitive and easy to parse.</h5>
          </div>
          <p class="big-paragraph">
            <b>ColorLoom</b> allows a user to generate custom colormaps with hues automatically pulled from imported images. This applet gives users looking to design a custom colormap a
            dynamic starting point, and allows them to pull hues from imagery directly related to the dataset they are visualizing.
          </p>
        </div>
        <div id="line">
          <h2>Infinite Line</h2>
          <div class="first-image">
            <img src="images/thrusts/VisSoftwareArch/lines (1).png">
            <h5>Hand-drawn and painted lines and line-components used to generate data-mapped streamlines in ABR.</h5>
          </div>
          <p class="big-paragraph">
            <b>Infinite Line</b> brings the physical artistic process into the visualization generation pipeline by allowing a user to sketch a line segment,
            upload an image of the sketch, and turn that sketch into a continuous, unbroken, patterned streamline. The output file can be dragged directly into ABR for immediate use.
          </p>
        </div>
        <div id="glyph">
         <h2>Glyph Aligner</h2>
         <div class="first-image">
           <img src="images/thrusts/VisSoftwareArch/glyphs (1).png">
           <h5>A wide variety of both shape and texture in hand-made objects, which are then imported into ABR and mapped to data</h5>
           <p class="big-paragraph">
             <b>Glyph Aligner</b> like Infinite Line, connects the physical artistic process with the digital.
             When an artist creates a three-dimensional object, such as a small clay sculpture, they can 3D scan this object and drag it into Glyph Aligner.
             Glyph Aligner allows users to give this 3D scan a directional quality. The output file can be dragged directly into ABR for immediate use as a glyph.
           </p>
         </div>
       </div>
        <div id="texture">
          <h2>Texture Mapper</h2>
          <div class="first-image">
            <img src="images/thrusts/VisSoftwareArch/texture (1).png">
          </div>
          <p class="big-paragraph">
            <b>Texture Mapper</b> shortens the space between the texture of the physical and digital worlds.
            A user may simply take a photo of any surface and upload that photo to texture mapper.
            The program automatically extracts the texture of the photo and produces a file output that
            can be dragged directly into ABR for immediate use as a texture for data surfaces in a visualization.
          </p>
        </div>
      </thrust-content>

      <thrust-footer>
        {% include "njk/footer.html" %}
      </thrust-footer>

    </thrust-page>

    <script src="" async defer></script>
  </body>
</html>
